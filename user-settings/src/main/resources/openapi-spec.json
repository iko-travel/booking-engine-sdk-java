{"openapi":"3.0.1","info":{"title":"Wink API","description":" # Introduction\n Welcome to the Wink API - A programmer-friendly way to manage, sell and book travel blocking on the Wink platform. The API gives you all the tools you need to ready your properties and blocking for sale across 1000s of our native sales channels.\n Integrators, affiliates, travel agents and content creators have the ability search for your travel blocking and promote / sell it in a wide variety of ways.\n\n # Integrations\n We have already integrated with the most well-known channel managers so you don't have to. To see our current integrations, please go to https://extranet.wink.travel and scroll to Connectivity section. Once your properties are set up, you can finish the setup by mapping your property to Wink using your channel manager partner portal. If your properties don't have a channel manager, you can easily manage rates and availability with this API.\n\n # Intended Audience\n Programmers are [most likely] a requirement to start integrating with Wink. Companies and organizations that would most benefit from integrating with us are new and existing travel companies that have relationships with suppliers and that need an advanced system from which to manage their travel blocking and get that same blocking out to as many eyeballs as possible at the lowest price possible.\n - Hotel chains\n - Hotel brands\n - Travel tech companies\n - Destination sites\n - Integrators\n - Aggregators\n - Destination management companies\n - Travel agencies\n - OTAs\n\n ## APIs\n Not every integrator needs every API. For that reason, we have separated APIs into context.\n\n### Test API\n\n - [Ping](/ping): The Ping API is a quick test endpoint to verify that your credentials work Wink.\n\n### Common APIs\n\n- [Notifications](/notifications): The Notifications API is a way for us to stay in touch with your user, property or affiliate account.\n- [User Settings](/user-settings): The User Settings API exposes endpoints to allow 3rd party integrators to communicate with Wink.\n\n### Consume APIs\nConsume endpoints are for developers who want to find existing travel blocking and either book it or use it to advertise through one of their Wink affiliate accounts.\n\n - [Configuration](/engine-client): A single endpoint to retrieve whitelabel + customization information for the booking engine.\n - [Lookup](/lookup): All APIs related to locating blocking by region, locale and property flags.\n - [Inventory](/blocking): All APIs related to retrieve known travel blocking as it was found using the Lookup API..\n - [Booking](/booking): All APIs related to creating bookings on the platform.\n - [Travel Agent](/travel-agent): The Travel Agent API exposes endpoints to manage agent-facilitated bookings.\n\n ### Produce APIs\n Produce endpoints are for developers who want to create and manage travel blocking.\n\n #### Property\n - [Property registration](/extranet/property/register): As a producer, this is, oftentimes, where you start your journey. These endpoints let you create properties on Wink.\n - [Property](/extranet/property): This collection of property endpoints are mostly management endpoints that let you display, change status and similar for your existing properties.\n - [Facilities](/extranet/facilities): This collection of endpoints let you manage facilities; such as room types.\n - [Experiences](/extranet/experiences): This collection of endpoints let you manage experiences, such as activities.\n - [Monetize](/extranet/monetize): The Monetize API exposes endpoints for managing cancellation polies, rate plans, promotions and more on Wink.\n - [Distribution](/extranet/distribution): The Distribution API exposes endpoints for sales channels, connecting with affiliates, managing rates and blocking calendars and more on Wink.\n - [Property Booking](/extranet/booking): The Property Booking API exposes endpoints for managing bookings and reviews at the property-level.\n\n #### Affiliate\n - [Affiliate](/affiliate): This collection of affiliate endpoints are mostly management endpoints that let you display, change status and similar for your existing accounts.\n - [Browse](/affiliate/browse): The Browse API exposes endpoints for affiliates to find suppliers and blocking to sell.\n - [Inventory](/affiliate/blocking): The Inventory API exposes endpoints for affiliates to manage the blocking they want to sell and how they want to sell it.\n - [Sales Channel](/affiliate/sales-channel): The Sales Channel API exposes endpoints for affiliates to manage existing sales channels as well as find new ones.\n - [WinkLinks](/affiliate/winklinks): The WinkLinks API exposes endpoints for affiliates to manage their WinkLinks page.\n\n #### Rate provider\n - [Channel manager](/channel-manager): The Channel Manager API enables external channel manager partners to map, exchange rate / availability information with us as well as be informed of bookings that occur on the Wink platform for one of their properties.\n\n ### Taxonomy APIs\n Taxonomy endpoints are for developers who want to consume and produce travel blocking and need taxonomies of standard and non-standard codes for blocking types, classes, statuses etc.\n\n - [Reference](/reactive): All APIs related to retrieving platform-supported taxonomies.\n\n ### Insight APIs\n Insight endpoints do exactly what the name implies - They offer platform-level insight into the activities of producers and consumers.\n\n - [Analytics](/analytics): All APIs related to tracking metrics across a wide variety of data source segments including, more entertaining, leaderboard metrics.\n\n ### Payment APIs\n Payment endpoints are for developers who want to purchase travel blocking. This can be done via the API as a registered Travel Agent or using our API in conjunction with our PCI compliant reactive widget for all other entities.\n\n - [TripPay](/reactive): All APIs related to TripPay account management, booking, mapping and integration features.\n\n ## SDKs\n We are actively working on supporting the most used languages out there. If you don't see your language here, reach out to us with a request to officially add your language. In the meantime, if you want to roll your own SDK, you can do so by downloading the OpenAPI spec and using one of the many available OpenAPI generators available: [https://openapi-generator.tech/docs/generators](https://openapi-generator.tech/docs/generators).\n\n - Java SDK [https://github.com/wink-travel/wink-sdk-java](https://github.com/wink-travel/wink-sdk-java)\n\n ## Usage\n These features are made available to you via a [REST API](https://en.wikipedia.org/wiki/Representational_state_transfer). This API is language agnostic.\n\n ## Versioning\n We chose to version our endpoints in a way that we hope affects your integration minimally. You request the version of our API you wish to work with via the `Wink-Version` header. When it's time for you to upgrade, you only have to change the version number to get access to our updated endpoints.\n\n ## Release history\n - Follow updates on Github: https://github.com/wink-travel/wink-sdk-java/blob/master/CHANGELOG.md\n\n\n\n# User Settings API\nThe User Settings API exposes endpoints to allow 3rd party integrators to communicate with Wink. This API lets you:\n\n1. Application: Manage 3rd party access to Wink.\n2. Bucket List: Manage your bucket list on Wink.\n3. Webhook: Subscribe to receive Wink events as they occur in realtime.\n4. User: Manage user settings.\n\nBrowse the endpoints in the left navigation bar to get started.\n\n","contact":{"name":"Bjorn Harvold","email":"bjorn@wink.travel"},"version":"30.7.0","x-logo":{"backgroundColor":"#FFFFFF","altText":"wink","url":"https://res.cloudinary.com/traveliko/image/upload/c_scale,h_129/v1653285543/wink/logo_text_white.svg"}},"servers":[{"url":"https://api.wink.travel","description":"Endpoint"}],"tags":[{"name":"Webhook","description":"Use the Webhook API to create webhooks to interface with the TripPay API."},{"name":"User Settings","description":"Manage user profile, settings and other user related functionality."},{"name":"Application","description":"Use the Application API to create applications to interface with the TripPay API."}],"paths":{"/api/profile":{"get":{"tags":["User Settings"],"summary":"Show Profile","description":"Show profile by profile owner.","operationId":"showProfile","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileView_Non_Authenticated_Entity"}}}}},"security":[{"oauth2ClientCredentials":[]}]},"put":{"tags":["User Settings"],"summary":"Update Profile","description":"Update profile by profile owner.","operationId":"updateProfile","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertProfileRequest_Non_Authenticated_Entity"}}},"required":true},"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileView_Non_Authenticated_Entity"}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/webhook/{id}":{"get":{"tags":["Webhook"],"summary":"Show Webhook","description":"Show a specific webhook","operationId":"loadWebhook","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}}},"security":[{"oauth2ClientCredentials":[]}]},"delete":{"tags":["Webhook"],"summary":"Delete Webhook","description":"Remove a specific webhook","operationId":"deleteWebhook","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveEntryResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]},"patch":{"tags":["Webhook"],"summary":"Update Webhook","description":"Update an existing webhook","operationId":"updateWebhook","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertWebhookRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/user-settings/profile":{"get":{"tags":["User Settings"],"summary":"Show User Profile","description":"Retrieves user profile data.","operationId":"showUserProfile","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertUserProfileResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]},"patch":{"tags":["User Settings"],"summary":"Update User Profile","description":"Updates user profile data.","operationId":"updateUserProfile","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertUserProfileRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertUserProfileResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/application/{id}":{"get":{"tags":["Application"],"summary":"Show Application","description":"Show a specific application","operationId":"loadApplication","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Application"}}}}},"security":[{"oauth2ClientCredentials":[]}]},"delete":{"tags":["Application"],"summary":"Delete Application","description":"Remove a specific application","operationId":"deleteApplication","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveEntryResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]},"patch":{"tags":["Application"],"summary":"Update Application","description":"Update an existing application","operationId":"updateApplication","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertApplicationRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateApplicationResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/webhook/list":{"get":{"tags":["Webhook"],"summary":"Show Webhooks","description":"List all webhooks owned by creating entity","operationId":"showWebhooks","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Webhook"}}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/webhook/event/list":{"get":{"tags":["Webhook"],"summary":"Show Webhook Event List","description":"List all valid webhook events that can be subsccribed to","operationId":"showWebhookEvents","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/KeyValuePair"}}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/managing-entity/list":{"get":{"tags":["Application"],"summary":"Show Managing Entities","description":"Lists all entities, including user entity, owned by user.","operationId":"showManagingEntities","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ManagingEntity"}}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/application/{id}/revoke":{"get":{"tags":["Application"],"summary":"Revoke Application Credentials","description":"Refreshes the clientId and secretKey properties.","operationId":"revokeApplication","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RevokeClientIdResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/application/list":{"get":{"tags":["Application"],"summary":"Show Applications","description":"List all applications owned by creating entity","operationId":"showApplications","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/json"]}}],"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Application"}}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/webhook":{"post":{"tags":["Webhook"],"summary":"Create Webhook","description":"Create a new webhook","operationId":"createWebhook","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertWebhookRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Webhook"}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/application":{"post":{"tags":["Application"],"summary":"Create Application","description":"Create a new application","operationId":"createApplication","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertApplicationRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateApplicationResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]}},"/api/user-settings/change-password":{"patch":{"tags":["User Settings"],"summary":"Change password","description":"Updates currently authenticated user's password.","operationId":"changePassword","parameters":[{"name":"Wink-Version","in":"header","schema":{"type":"string","enum":["2.0"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangePasswordRequest"}}},"required":true},"responses":{"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"application/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/xml":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"text/plain":{"schema":{"oneOf":[{"type":"object","additionalProperties":{"type":"object"}},{"$ref":"#/components/schemas/GenericErrorMessage"}]}},"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"application/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/xml":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}},"text/plain":{"schema":{"$ref":"#/components/schemas/GenericErrorMessage"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BooleanResponse"}}}}},"security":[{"oauth2ClientCredentials":[]}]}}},"components":{"schemas":{"GenericErrorMessage":{"type":"object","properties":{"timestamp":{"type":"string","xml":{"attribute":true}},"status":{"type":"integer","format":"int32","xml":{"attribute":true}},"error":{"type":"string"},"message":{"type":"string"},"path":{"type":"string"}},"description":"Generic error message","xml":{"name":"ErrorMessage"}},"Contact_Non_Authenticated_Entity":{"type":"object","properties":{"firstName":{"type":"string","description":"Contact first name","example":"John"},"lastName":{"type":"string","description":"Contact last name","example":"Smith"},"email":{"type":"string","description":"Contact E-mail","example":"johnsmith@email.com"},"secondaryEmail":{"type":"string","description":"Contact secondary Email","example":"johnsmith2@email.com"},"phoneNumber":{"type":"string","description":"Contact phone number","example":"+12125551212"},"fullName":{"type":"string","description":"First and last name","readOnly":true,"example":"John Smith"},"summary":{"type":"string","description":"Summary","readOnly":true,"example":"John Smith (johnsmith@gmail.com / +12125551212)"}},"description":"Array of emergency contact information for the customer"},"Personal_Non_Authenticated_Entity":{"type":"object","properties":{"gender":{"type":"string","description":"Identifier the gender of the customer.","enum":["MALE","FEMALE","OTHER"]},"birthDate":{"type":"string","description":"Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.","format":"date"},"maritalStatus":{"type":"string","description":"Marital status of the traveler.","enum":["ANNULLED","COHABITATING","DIVORCED","ENGAGED","MARRIED","SEPARATED","SINGLE","WIDOWED","UNKNOWN"]},"childQuantity":{"type":"integer","description":"The number of children of the customer.","format":"int32"},"citizenship":{"type":"string","description":"Name of the (self-professed) country that is clamided for citizenship."},"address1":{"type":"string","description":"Address line 1"},"address2":{"type":"string","description":"Address line 2"},"city":{"type":"string","description":"City"},"state":{"type":"string","description":"State"},"postalCode":{"type":"string","description":"Postal code"},"country":{"type":"string","description":"Country"},"preferredCurrency":{"type":"string","description":"Type of funds preferred for reviewing monetary values, in ISO 4217 codes","example":"USD"},"language":{"type":"string","description":"The primary language of the customer"},"contactPerson":{"type":"array","items":{"$ref":"#/components/schemas/Contact_Non_Authenticated_Entity"}},"physChallName":{"type":"array","items":{"type":"string","description":"Array of customer's physical challenges"}},"petInfo":{"type":"array","items":{"$ref":"#/components/schemas/PetInfoDto_Non_Authenticated_Entity"}}},"description":"Detailed customer information for this profile"},"PetInfoDto_Non_Authenticated_Entity":{"required":["name","type"],"type":"object","properties":{"name":{"type":"string","description":"Pet name"},"type":{"type":"string","description":"Pet type"}},"description":"Array of customer's pets"},"Preferences_Non_Authenticated_Entity":{"type":"object","properties":{"propertyLocationPref":{"type":"string","description":"Indicates preference for hotel property locations."},"propertyTypePref":{"type":"string","description":"Indicates preference for hotel property types."},"hotelChainPref":{"type":"string","description":"Identifies a preferred company by name."},"propertyAmenityPref":{"type":"array","description":"Indicates preferences for hotel property amenities.","items":{"type":"string"}},"recreationSrvcPref":{"type":"array","description":"Indicates preference for the type of recreation services in a hotel","items":{"type":"string"}},"businessSrvcPref":{"type":"array","description":"Indicates preference for type of business services in a hotel","items":{"type":"string"}},"securityFeaturePref":{"type":"array","description":"Indicates preference of rtype of security features in a hotel","items":{"type":"string"}},"physChalFeaturePref":{"type":"array","description":"Indicates preferences for type of features required to meet the needs of persons with physical challenges, disabilities, etc.","items":{"type":"string","description":"Indicates preferences for type of features required to meet the needs of persons with physical challenges, disabilities, etc."}},"smokingAllowed":{"type":"boolean","description":"Indicates preference for smooking allowed rooms.."},"roomLocationPref":{"type":"string","description":"Indicates preference for hotel room locations."},"bedTypePref":{"type":"string","description":"Indicates preferences for the size and features of hotel bed types."},"foodSrvcPref":{"type":"string","description":"Indicates preferences for type of food listener facilities in a hotel."},"roomAmenityPref":{"type":"array","description":"Indicates preferences for hotel room amenities.","items":{"type":"string"}},"guestType":{"type":"string","description":"Guest type"},"mealPref":{"type":"string","description":"Indicates meal preference."},"cuisinePref":{"type":"string","description":"Indicates cuisine preference."},"interestPref":{"type":"array","description":"Indicates interest preference","items":{"type":"string"}},"beveragePref":{"type":"array","description":"Indicates beverage preference.","items":{"type":"string"}},"foodPref":{"type":"array","description":"Indicates food preference.","items":{"type":"string"}},"allergies":{"type":"array","description":"Indicates allergies","items":{"type":"string"}},"petsPref":{"type":"array","description":"Indicates pet preferences","items":{"type":"string"}}},"description":"Customer preferences"},"ProfileUser_Non_Authenticated_Entity":{"type":"object","properties":{"firstName":{"type":"string","description":"First name","example":"Avid"},"lastName":{"type":"string","description":"Last name","example":"Travelman"},"email":{"type":"string","description":"Email","format":"email","example":"avid@travelman.com"},"phone":{"type":"string","description":"Telephone","example":"0123456789"},"profilePictureUrl":{"type":"string","description":"Profile picture URL"},"fullName":{"type":"string","description":"Full name","readOnly":true,"example":"John Smith"}},"description":"User details"},"UpsertProfileRequest_Non_Authenticated_Entity":{"required":["personal","preferences","share","user"],"type":"object","properties":{"share":{"type":"boolean","description":"Indicates whether the user wants to share this profile of themselves with hotel(s)"},"user":{"$ref":"#/components/schemas/ProfileUser_Non_Authenticated_Entity"},"personal":{"$ref":"#/components/schemas/Personal_Non_Authenticated_Entity"},"preferences":{"$ref":"#/components/schemas/Preferences_Non_Authenticated_Entity"}}},"ProfileView_Non_Authenticated_Entity":{"required":["profile"],"type":"object","properties":{"id":{"type":"string","description":"Document UUID","example":"doc-1"},"createdDate":{"type":"string","description":"Datetime this record was first created","format":"date-time"},"lastUpdate":{"type":"string","description":"Datetime this record was last updated","format":"date-time"},"version":{"type":"integer","description":"Version property that shows how many times this document has been persisted. Document will not persist if the version property is less than current version property in the system. Result in an optimistic locking exception.","format":"int64","example":12},"profile":{"$ref":"#/components/schemas/Profile_Non_Authenticated_Entity"}}},"Profile_Non_Authenticated_Entity":{"required":["personal","preferences","profileIdentifier","share","user","userIdentifier"],"type":"object","properties":{"profileIdentifier":{"type":"string","description":"Profile identifier","format":"uuid"},"userIdentifier":{"type":"string","description":"User identifier","format":"uuid"},"share":{"type":"boolean","description":"Indicates whether the user wants to share this profile of themselves with hotel(s)"},"user":{"$ref":"#/components/schemas/ProfileUser_Non_Authenticated_Entity"},"personal":{"$ref":"#/components/schemas/Personal_Non_Authenticated_Entity"},"preferences":{"$ref":"#/components/schemas/Preferences_Non_Authenticated_Entity"}}},"ManagingEntity":{"required":["label","type","value"],"type":"object","properties":{"value":{"type":"string","description":"The value that should be persisted.","example":"company-1"},"label":{"type":"string","description":"Text representation of the value.","example":"Company 1"},"type":{"type":"string","description":"Type of entity.","example":"COMPANY","enum":["USER","COMPANY","ACCOUNT"]}},"description":"Name of the application.","example":"App 1"},"UpsertWebhookRequest":{"required":["enabled","entity","eventList","eventUrl","name"],"type":"object","properties":{"name":{"type":"string","description":"Descriptive name of webhook.","example":"Webhook prod"},"entity":{"$ref":"#/components/schemas/ManagingEntity"},"enabled":{"type":"boolean","description":"Whether this webhook is enabled.","example":true,"default":true},"eventUrl":{"type":"string","description":"The url to POST event to.","example":"https://www.webhook.com/event"},"eventList":{"type":"array","items":{"type":"string","description":"The events the listener wants to receive. Leave empty to receive all events.","example":"account.created"}}}},"Webhook":{"required":["enabled","eventList","eventUrl","id","name","ownerIdentifier","ownerName","ownerType","userIdentifier"],"type":"object","properties":{"id":{"type":"string","description":"Document UUID","example":"doc-1"},"createdDate":{"type":"string","description":"Datetime this record was first created","format":"date-time"},"lastUpdate":{"type":"string","description":"Datetime this record was last updated","format":"date-time"},"version":{"type":"integer","description":"Version property that shows how many times this document has been persisted. Document will not persist if the version property is less than current version property in the system. Result in an optimistic locking exception.","format":"int64","example":12},"userIdentifier":{"type":"string","description":"Unique owner record identifier","format":"uuid"},"ownerIdentifier":{"type":"string","description":"Unique owner record identifier","format":"uuid"},"ownerName":{"type":"string","description":"Name of company owner.","example":"Travel Tech 1"},"ownerType":{"type":"string","description":"Type of entity.","example":"COMPANY","enum":["USER","COMPANY","ACCOUNT"]},"name":{"type":"string","description":"Descriptive name of webhook.","example":"Webhook prod"},"enabled":{"type":"boolean","description":"Whether this webhook is enabled.","example":true,"default":true},"eventUrl":{"type":"string","description":"The url to POST event to.","example":"https://www.webhook.com/event"},"eventList":{"type":"array","items":{"type":"string","description":"The events the listener wants to receive. Leave empty to receive all events.","example":"account.created"}}}},"UpsertApplicationRequest":{"required":["entity","name","redirectUris"],"type":"object","properties":{"name":{"type":"string","description":"Name of the application.","example":"App 1"},"entity":{"$ref":"#/components/schemas/ManagingEntity"},"redirectUris":{"type":"array","items":{"type":"string","description":"Where to redirect after successful OAuth2.","example":"https://my.travel.blog"}}}},"CreateApplicationResponse":{"required":["clientId","id","name","ownerIdentifier","ownerName","ownerType","secretKey"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier.","format":"uuid"},"ownerIdentifier":{"type":"string","description":"Unique owner record identifier","format":"uuid"},"ownerName":{"type":"string","description":"Name of company owner.","example":"Travel Tech 1"},"ownerType":{"type":"string","description":"Type of entity.","example":"COMPANY","enum":["USER","COMPANY","ACCOUNT"]},"name":{"type":"string","description":"Name of this engine application. The first engine for every integrator will have the same name as its company name.","example":"Engine 1"},"redirectUris":{"type":"array","description":"Where to redirect after web components successfully authenticate. For OAuth2 purposes.","example":["https://my.travel.blog"],"items":{"type":"string","description":"Where to redirect after web components successfully authenticate. For OAuth2 purposes.","example":"[\"https://my.travel.blog\"]"}},"clientId":{"type":"string","description":"Client identifier used to authenticate an Oauth2 or web component request.","example":"client-id-123"},"secretKey":{"type":"string","description":"Password used to authenticate an Oauth2 request."}}},"ImageAttribution":{"required":["name"],"type":"object","properties":{"url":{"type":"string","description":"URL to contributor","example":"https://maps.google.com/maps/contrib/111628493169070103594"},"name":{"type":"string","description":"Name of contributor","example":"Samuel Adams"}},"description":"Whether image has attribution properties"},"SimpleDescription":{"required":["description","language"],"type":"object","properties":{"name":{"type":"string","description":"Use as title or short text description","example":"An example title"},"description":{"maxLength":2147483647,"minLength":1,"type":"string","description":"Longer text description","example":"This is a longer description in the specified language."},"language":{"maxLength":2,"minLength":2,"type":"string","description":"Indicate which language this description is written in.","example":"en","default":"en"}},"description":"Localized media captions to give user some context about where this media was taken."},"SimpleMultimedia":{"required":["height","identifier","multimediaIdentifier","source","type","width"],"type":"object","properties":{"multimediaIdentifier":{"type":"string","description":"Document identifier","format":"uuid"},"identifier":{"type":"string","description":"Use this identifier to communicate with Cloudinary.","example":"cloudinary-image-1"},"type":{"type":"string","description":"Whether Cloudinary media is a VIDEO or IMAGE.","example":"IMAGE","enum":["IMAGE","VIDEO","AUDIO","RAW"]},"source":{"type":"string","description":"Currently ONLY using Cloudinary to store all image / video assets.","example":"CLOUDINARY","default":"CLOUDINARY","enum":["YOUTUBE","CLOUDINARY"]},"sort":{"type":"integer","description":"Sort allows you to control how you want to sort this record in a list of media records.","format":"int32","example":10,"default":999},"angle":{"type":"string","description":"Media angle","example":"-90"},"width":{"type":"integer","description":"Media width in pixels.","format":"int32","example":2560},"height":{"type":"integer","description":"Media height in pixels.","format":"int32","example":1600},"published":{"type":"boolean","description":"Instead of deleting the media, choose to un-publish it instead for later re-use. Could be you keep seasonal images of the property.","example":true,"default":false},"category":{"type":"string","description":"Supported OTA specification `PIC` code. See [OTA geoname data](#operation/showAvailableCodesForCategory)","example":"1"},"descriptions":{"type":"array","description":"Localized media captions to give user some context about where this media was taken.","items":{"$ref":"#/components/schemas/SimpleDescription"}},"lifestyleType":{"type":"string","description":"Associate this media with a specific lifestyle type. A user searching and filtering inventory based on lifestyles can be shown relevant media first.","example":"LIFESTYLE_HEALTH_FITNESS","enum":["LIFESTYLE_HEALTH_FITNESS","LIFESTYLE_RELAX","LIFESTYLE_ADULT_ONLY","LIFESTYLE_ADVENTURE","LIFESTYLE_BUSINESS","LIFESTYLE_LGBT","LIFESTYLE_SINGLE_PARENT","LIFESTYLE_SOLO_FEMALE","LIFESTYLE_BEAUTY","LIFESTYLE_FOODIE","LIFESTYLE_FAMILY","LIFESTYLE_ROMANCE","LIFESTYLE_COUPLE","LIFESTYLE_SOLO","LIFESTYLE_BACKPACKER","LIFESTYLE_SHOPPING","LIFESTYLE_SPORTS","LIFESTYLE_MOUNTAIN","LIFESTYLE_BEACH","LIFESTYLE_CITY","LIFESTYLE_COUNTRY","LIFESTYLE_CULTURE","LIFESTYLE_ECO"]},"attribution":{"type":"array","description":"Whether image has attribution properties","items":{"$ref":"#/components/schemas/ImageAttribution"}},"isLandscape":{"type":"boolean","description":"True if media width is greater or equal to height","example":true}},"description":"Multimedia that contains less information than Multimedia object"},"UpsertUserProfileRequest":{"required":["firstName","lastName","username"],"type":"object","properties":{"firstName":{"type":"string","description":"First name","example":"Jane"},"lastName":{"type":"string","description":"Last name","example":"Doe"},"username":{"type":"string","description":"Unique user email","example":"jane@doe.com"},"profilePicture":{"$ref":"#/components/schemas/SimpleMultimedia"}},"description":"User profile information"},"UpsertUserProfileResponse":{"required":["firstName","identifier","lastName","username"],"type":"object","properties":{"identifier":{"type":"string","description":"User ID","example":"user-1"},"firstName":{"type":"string","description":"First name","example":"Jane"},"lastName":{"type":"string","description":"Last name","example":"Doe"},"username":{"type":"string","description":"Unique user email","example":"jane@doe.com"},"profilePicture":{"$ref":"#/components/schemas/SimpleMultimedia"},"profilePictureUrl":{"type":"string","description":"A fully qualified URL based on the Cloudinary identifier","example":"https://res.cloudinary.com/traveliko/image/upload/c_scale,h_512,q_auto:best,w_512/k8nvegwqn0ih3xqioykn.jpg"}},"description":"User profile information"},"ChangePasswordRequest":{"required":["confirmPassword","password"],"type":"object","properties":{"password":{"type":"string"},"confirmPassword":{"type":"string"}}},"BooleanResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"Whether call to endpoint was successful or not."},"message":{"type":"string","description":"A message indicating more textual information. Mostly used to convey an error message."}},"description":"Boolean response"},"UpdateApplicationResponse":{"required":["entity","id"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier.","format":"uuid"},"name":{"type":"string","description":"Name of the application.","example":"App 1"},"entity":{"$ref":"#/components/schemas/ManagingEntity"},"redirectUris":{"type":"array","items":{"type":"string","description":"Where to redirect after successful OAuth2.","example":"https://my.travel.blog"}}}},"KeyValuePair":{"required":["label","value"],"type":"object","properties":{"value":{"type":"string","description":"The value that should be persisted.","example":"id-1"},"label":{"type":"string","description":"English readable text of the value.","example":"Readable text label"}}},"Application":{"required":["clientId","id","name","ownerIdentifier","ownerName","ownerType"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier.","format":"uuid"},"ownerIdentifier":{"type":"string","description":"Unique owner record identifier","format":"uuid"},"ownerName":{"type":"string","description":"Name of company owner.","example":"Travel Tech 1"},"ownerType":{"type":"string","description":"Type of entity.","example":"COMPANY","enum":["USER","COMPANY","ACCOUNT"]},"name":{"type":"string","description":"Name of this engine application. The first engine for every integrator will have the same name as its company name.","example":"Engine 1"},"redirectUris":{"type":"array","description":"Where to redirect after web components successfully authenticate. For OAuth2 purposes.","example":["https://my.travel.blog"],"items":{"type":"string","description":"Where to redirect after web components successfully authenticate. For OAuth2 purposes.","example":"[\"https://my.travel.blog\"]"}},"clientId":{"type":"string","description":"Client identifier used to authenticate an Oauth2 or web component request.","example":"client-id-123"}}},"RevokeClientIdResponse":{"required":["clientId","id","secretKey"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier.","format":"uuid"},"clientId":{"type":"string","description":"Client identifier used to authenticate an Oauth2 or web component request.","example":"client-id-123"},"secretKey":{"type":"string","description":"Password used to authenticate an Oauth2 request."}}},"RemoveEntryResponse":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of removed document","example":"document-1"},"success":{"type":"boolean","description":"Whether the removal was successful or not.","example":true},"message":{"type":"string","description":"Message with additional information; mostly if the removal request was a failure.","example":"Record successfully removed"}},"description":"Response object for when a system document is removed."}},"securitySchemes":{"oauth2ClientCredentials":{"type":"oauth2","description":"## Retrieve access token\nMake a POST (`Content-Type: application/x-www-form-urlencoded`) request to the Token URL below. Include one POST key/value entry: `grant_type=client_credentials` and include your clientID / secretKey credentials in a Basic Auth header. E.g. `Authorization: Basic base64_encode($clientId + ':' + $secretKey)`.\n## Add Bearer access token to all API requests\nOnce you have the access token, you can pass that along on all API requests in the authentication header: `'Authorization: Bearer $accessToken`.\nNote: Tokens expire after 3 hours. Please make sure you refresh your token before that time.","name":"Client Credentials","flows":{"clientCredentials":{"authorizationUrl":"https://iam.wink.travel/oauth2/authorize","tokenUrl":"https://iam.wink.travel/oauth2/token","refreshUrl":"https://iam.wink.travel/oauth2/refresh","scopes":{"inventory.read":"Read Wink data","inventory.write":"Create Wink data","inventory.remove":"Remove Wink data"}}}}}}}